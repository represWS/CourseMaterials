#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass scrartcl
\begin_preamble
\fancypagestyle{plain}
\end_preamble
\use_default_options true
\begin_modules
knitr
customHeadersFooters
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Left Header
Bioinformatics Core Facility
\begin_inset Newline newline
\end_inset

Swiss Institute of Bioinformatics
\end_layout

\begin_layout Center Header
\begin_inset Graphics
	filename sib_logo.pdf
	width 10mm

\end_inset


\end_layout

\begin_layout Right Header
reproducible research workshop
\begin_inset Newline newline
\end_inset

March 20, 2014
\end_layout

\begin_layout Left Footer
Technical Report BCF-SIB
\end_layout

\begin_layout Center Footer

\end_layout

\begin_layout Right Footer
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thepage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<setup, echo=FALSE, cache=FALSE>>= 
\end_layout

\begin_layout Plain Layout

opts_chunk$set(fig.path = "figures/", fig.align = "center",              
                  fig.show = "hold", tidy = FALSE, echo = FALSE) 
\end_layout

\begin_layout Plain Layout

options(width = 78) 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Title
Illustrating code externalization with knitr
\end_layout

\begin_layout Author
Sarah Gerster (sarah.gerster@isb-sib.ch) and
\begin_inset Newline newline
\end_inset

Frédéric Schütz (frederic.schutz@isb-sib.ch)
\begin_inset Newline newline
\end_inset

Bioinformatics Core Facility
\begin_inset Newline newline
\end_inset

Swiss Institute of Bioinformatics, Lausanne, Switzerland
\end_layout

\begin_layout Date
March 20, 2014
\end_layout

\begin_layout Section
The concept of code externalization
\end_layout

\begin_layout Standard
We discussed thoroughly why it is a good idea of combining R code and reporting/
documentation in a single file.
 The concept of code externalization goes somewhat in the opposite direction.
 Sometimes, it is easier and/or more convenient to have the main R code
 in a separate 
\family typewriter
.R
\family default
 file.
\end_layout

\begin_layout Standard
There are several reasons to consider code externalization.
 The most important one is probably clarity and manageability of the code:
 if you have to scroll through too many text parts to find the right place
 to complete your R code, it can get frustrating.
 Also, it might be easier to have the main R code in a single file for tuning
 and testing.
 Of course, you could always get a 
\family typewriter
.R
\family default
 file from the 
\family typewriter
.lyx
\family default
 source with a call to the function 
\family typewriter
purl()
\family default
.
 But then you run into trouble if you start editing this 
\family typewriter
.R
\family default
 file instead of the source in the 
\family typewriter
.lyx
\family default
 file.
\end_layout

\begin_layout Standard
Another important point speaking for code externalization is that it allows
 to re-use the same R code in different projects.
 In this sense, it is a bit like sourcing external R scripts.
 The major difference is that you still organize your code in chunks and
 benefit from all the chunk options to include/format code/output in your
 report.
 
\end_layout

\begin_layout Section
How code externalization works
\end_layout

\begin_layout Standard
The R code is structured in chunks.
 To do so, you have to annotate the code with comments of the form 
\family typewriter
## ---- label
\family default
 or 
\family typewriter
## @knitr label
\family default
.
 For example, the file 
\family typewriter
extern.R
\family default
 contains the following lines to define a chunk 
\family typewriter
plotdata
\family default
:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

## ---- plotdata ----
\end_layout

\begin_layout Plain Layout

dat <- read.table("my_ext_data.csv", header = TRUE, sep = ",")
\end_layout

\begin_layout Plain Layout

boxplot(dat)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
To use the chunk in the report (this file) we first have to read the information
 in the external file(s) with calls to the function 
\family typewriter
read_chunk()
\family default
:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

read_chunk("extern.R")
\end_layout

\end_inset


\end_layout

\begin_layout Standard
We can then evaluate a specific chunk by including a statement of the form
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
verb~<<plotdata, out.width = "0.45
\backslash

\backslash
textwidth">>=~
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
verb~@~
\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
In other words, for each chunk defined in 
\family typewriter
extern.R
\family default
, we should have a corresponding chunk in the report.
 You can find more information and examples about code externalization on
 http://yihui.name/knitr/demo/externalization/
\end_layout

\begin_layout Section
A brief illustration of the concept of code externalization
\end_layout

\begin_layout Standard
All R code for the output below is stored in the file 
\family typewriter
external.R
\family default
.
 In the explorative analysis below, we simply call the chunks one at a time.
\end_layout

\begin_layout Standard
In a first step, we visualize the sparrow data from Bumpus
\begin_inset Foot
status open

\begin_layout Plain Layout
http://www.ndsu.nodak.edu/ndsu/doetkott/introsas/rawdata/bumpus.html
\end_layout

\end_inset

 with box plots.
 The measurements come from 49 birds collected after a severe storm near
 Brown University in Rhode Island.
 Birds 1 to 21 survived, while the remainder died (original source Bumpus
 1898).
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<read-external>>=
\end_layout

\begin_layout Plain Layout

read_chunk("extern.R")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

<<plotdata, out.width = "0.45
\backslash

\backslash
textwidth">>=
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
We use principal component analysis (on scaled data) to explore the data
 set further.
 We are especially interested in seeing which variable contributes how much
 to (and with which sign) to the first two principal components.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<prcomp, out.width = "0.75
\backslash

\backslash
textwidth", echo = c(-6, -8), results = "asis">>=
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Finally, we also want to look at star plots to complete our brief explorative
 analysis of the data set.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<starplot, out.width = "0.95
\backslash

\backslash
textwidth">>=
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Section*
R Session information
\end_layout

\begin_layout Standard
This document was generated with the following R (packages) version:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<results = "asis">>=
\end_layout

\begin_layout Plain Layout

toLatex(sessionInfo(), locale = FALSE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_body
\end_document
